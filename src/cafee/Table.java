/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cafee;

import java.awt.Dimension;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class Table extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public Table() {
        initComponents();

        btn_memeprix.setVisible(false);
        btn_1000da.setVisible(false);
        btn_2000da.setVisible(false);
        btn_500da.setVisible(false);
        tbn_200da.setVisible(false);
        table_commande.setOpaque(false);
        ((DefaultTableCellRenderer) table_commande.getDefaultRenderer(Object.class)).setOpaque(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);
        Font font = UIManager.getFont("TableHeader.font");
        font = font.deriveFont(24f);
        UIManager.put("TableHeader.font", font);
//table_commande.getTableHeader().setFont(new Font("Times new Roman", Font.BOLD, 18));
        Connection conn1 = null;
        int i = 0;

        try {
            String sql1 = "SELECT * FROM PRODUIT WHERE CATEGORIE = '" + Cambo_categorie.getSelectedItem() + "'";
            String url = "jdbc:sqlite:CAFE.db";
            // create a connection to the database
            conn1 = DriverManager.getConnection(url);

            PreparedStatement stmt1 = conn1.prepareStatement(sql1);
            //Bind values into the parameters.
            ResultSet rs1 = stmt1.executeQuery();
            while (rs1.next()) {

                Cambo_nom.addItem(rs1.getString(2));
                txt_prix.setText(rs1.getString(5));
            }
        } catch (SQLException ex) {

        } finally {
            try {
                if (conn1 != null) {
                    conn1.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }

        //  jPanel32.setVisible(true);
        // jPanel32.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Cambo_categorie = new javax.swing.JComboBox<>();
        Cambo_nom = new javax.swing.JComboBox<>();
        Spin_qty = new javax.swing.JSpinner();
        txt_prix = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Total = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_commande = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        lbl_reste = new javax.swing.JLabel();
        btn_memeprix = new javax.swing.JButton();
        btn_2000da = new javax.swing.JButton();
        btn_500da = new javax.swing.JButton();
        btn_1000da = new javax.swing.JButton();
        tbn_200da = new javax.swing.JButton();
        btn_payer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Total1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jPanel1.setLayout(null);

        Cambo_categorie.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Cambo_categorie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "مشروبات ساخنة", "مشروبات باردة", "حلويات" }));
        Cambo_categorie.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Cambo_categorie.setOpaque(false);
        Cambo_categorie.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Cambo_categorieItemStateChanged(evt);
            }
        });
        Cambo_categorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cambo_categorieActionPerformed(evt);
            }
        });
        jPanel1.add(Cambo_categorie);
        Cambo_categorie.setBounds(390, 270, 210, 40);

        Cambo_nom.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Cambo_nom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "اسم الطلب" }));
        Cambo_nom.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Cambo_nom.setOpaque(false);
        Cambo_nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cambo_nomActionPerformed(evt);
            }
        });
        jPanel1.add(Cambo_nom);
        Cambo_nom.setBounds(180, 270, 210, 40);

        Spin_qty.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Spin_qty.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Spin_qty.setOpaque(false);
        jPanel1.add(Spin_qty);
        Spin_qty.setBounds(100, 270, 80, 40);

        txt_prix.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txt_prix.setText("الثمن");
        txt_prix.setOpaque(false);
        jPanel1.add(txt_prix);
        txt_prix.setBounds(10, 270, 100, 40);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(184, 44, 44));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("المبلغ الكلي :  ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 340, 190, 40);

        Total.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        Total.setForeground(new java.awt.Color(112, 169, 67));
        Total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Total.setText("0.00");
        jPanel1.add(Total);
        Total.setBounds(10, 380, 160, 40);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("اضافة طلب");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(450, 320, 140, 30);

        jScrollPane1.setOpaque(false);

        table_commande.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        table_commande.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "الثمن", "العدد", "الطلب"
            }
        ));
        table_commande.setOpaque(false);
        table_commande.setRowMargin(5);
        jScrollPane1.setViewportView(table_commande);
        table_commande.getTableHeader().setFont(new Font("Times new Roman", Font.BOLD, 18));

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 10, 590, 250);

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("حذف طلب");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(450, 360, 140, 30);

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setText("تنظيف الطاولة");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(450, 400, 140, 30);

        lbl_reste.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        lbl_reste.setForeground(new java.awt.Color(112, 169, 67));
        lbl_reste.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_reste.setText("0.00");
        jPanel1.add(lbl_reste);
        lbl_reste.setBounds(10, 430, 170, 40);

        btn_memeprix.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_memeprix.setText("نفس المبلغ");
        btn_memeprix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_memeprixActionPerformed(evt);
            }
        });
        jPanel1.add(btn_memeprix);
        btn_memeprix.setBounds(200, 340, 240, 30);

        btn_2000da.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/2000DZD.jpg"))); // NOI18N
        btn_2000da.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_2000daActionPerformed(evt);
            }
        });
        jPanel1.add(btn_2000da);
        btn_2000da.setBounds(330, 370, 110, 50);

        btn_500da.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/500da-1.jpg"))); // NOI18N
        btn_500da.setText("jButton6");
        btn_500da.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_500daActionPerformed(evt);
            }
        });
        jPanel1.add(btn_500da);
        btn_500da.setBounds(330, 420, 110, 50);

        btn_1000da.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Algeria1000Dinar-2005.JPG"))); // NOI18N
        btn_1000da.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1000daActionPerformed(evt);
            }
        });
        jPanel1.add(btn_1000da);
        btn_1000da.setBounds(200, 370, 130, 50);

        tbn_200da.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/200da.jpg"))); // NOI18N
        tbn_200da.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbn_200daActionPerformed(evt);
            }
        });
        jPanel1.add(tbn_200da);
        tbn_200da.setBounds(200, 420, 130, 50);

        btn_payer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_payer.setText("دفع الحساب");
        btn_payer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_payerActionPerformed(evt);
            }
        });
        jPanel1.add(btn_payer);
        btn_payer.setBounds(450, 440, 140, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\pc\\Downloads\\restaurant_tables.jpg")); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 600, 540);

        Total1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        Total1.setForeground(new java.awt.Color(112, 169, 67));
        Total1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Total1.setText("0.00");
        jPanel1.add(Total1);
        Total1.setBounds(10, 380, 160, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/uu-1024x610.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 479, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Cambo_categorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cambo_categorieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Cambo_categorieActionPerformed

    private void Cambo_nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cambo_nomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Cambo_nomActionPerformed

    private void Cambo_categorieItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Cambo_categorieItemStateChanged
        Cambo_nom.removeAllItems();
        Connection conn1 = null;

        try {
            String sql1 = "SELECT * FROM PRODUIT WHERE CATEGORIE = '" + Cambo_categorie.getSelectedItem() + "'";
            String url = "jdbc:sqlite:CAFE.db";
            // create a connection to the database
            conn1 = DriverManager.getConnection(url);

            PreparedStatement stmt1 = conn1.prepareStatement(sql1);
            //Bind values into the parameters.
            ResultSet rs1 = stmt1.executeQuery();
            while (rs1.next()) {

                Cambo_nom.addItem(rs1.getString(2));
                txt_prix.setText(rs1.getString(5));
            }
        } catch (SQLException ex) {

        } finally {
            try {
                if (conn1 != null) {
                    conn1.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_Cambo_categorieItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int c = Integer.parseInt(Spin_qty.getValue().toString());
        double pn = Double.parseDouble(txt_prix.getText());
        somme = c * pn;
        subtot += somme;
        DefaultTableModel model = (DefaultTableModel) table_commande.getModel();
        model.addRow(new Object[]{String.valueOf(somme), Spin_qty.getValue().toString(), Cambo_nom.getSelectedItem().toString()});

        Total.setText("" + subtot + "دج");

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) table_commande.getModel();
        //ahora obtenemos la fila selccionada
        int fila_select = table_commande.getSelectedRow();

        if (fila_select < 0) {
            // no se puede eliminar
            JOptionPane.showMessageDialog(this, "حددالطلب التي تريد حذفها");

        } else {

            subtot = subtot - (Double.parseDouble(modelo.getValueAt(fila_select, 0).toString()));
            Total.setText("" + subtot + "دج");

            //  Label_SOMME.setText(""+sub+"دج");
            //   Label_SOMMETOTAL.setText(""+sub+"دج");
            modelo.removeRow(fila_select);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ((DefaultTableModel) table_commande.getModel()).setNumRows(0);
        Total.setText("0.00");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btn_memeprixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_memeprixActionPerformed
        lbl_reste.setText("");
        Total.setText("الباقي");
    }//GEN-LAST:event_btn_memeprixActionPerformed

    private void tbn_200daActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbn_200daActionPerformed
        double m = 200.00;
        m = m - subtot;
        lbl_reste.setText(String.valueOf(m));
        Total.setText("الباقي");
    }//GEN-LAST:event_tbn_200daActionPerformed

    private void btn_500daActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_500daActionPerformed
        double m = 500.00;
        m = m - subtot;
        lbl_reste.setText(String.valueOf(m));
        Total.setText("الباقي");
    }//GEN-LAST:event_btn_500daActionPerformed

    private void btn_payerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_payerActionPerformed
        btn_memeprix.setVisible(true);
        btn_1000da.setVisible(true);
        btn_2000da.setVisible(true);
        btn_500da.setVisible(true);
        tbn_200da.setVisible(true);
        inserttable();
        update1();
        insertvente();
        insertcaisse();
        CAISSE c= new CAISSE();
         c.CAISSE(); 
       c.selectProduit();
    }//GEN-LAST:event_btn_payerActionPerformed

    private void btn_2000daActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_2000daActionPerformed
        double m = 2000.00;
        m = m - subtot;
        lbl_reste.setText(String.valueOf(m));
        Total.setText("الباقي");
    }//GEN-LAST:event_btn_2000daActionPerformed

    private void btn_1000daActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_1000daActionPerformed
        double m = 1000.00;
        m = m - subtot;
        lbl_reste.setText(String.valueOf(m));
        Total.setText("الباقي");
    }//GEN-LAST:event_btn_1000daActionPerformed
    public String name;
    double somme = 0.00;
    double subtot = 0.00;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Cambo_categorie;
    private javax.swing.JComboBox<String> Cambo_nom;
    private javax.swing.JSpinner Spin_qty;
    private javax.swing.JLabel Total;
    private javax.swing.JLabel Total1;
    private javax.swing.JButton btn_1000da;
    private javax.swing.JButton btn_2000da;
    private javax.swing.JButton btn_500da;
    private javax.swing.JButton btn_memeprix;
    public javax.swing.JButton btn_payer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_reste;
    private javax.swing.JTable table_commande;
    private javax.swing.JButton tbn_200da;
    private javax.swing.JTextField txt_prix;
    // End of variables declaration//GEN-END:variables
void inserttable() {
        Connection conn3 = null;
        Connection conn2 = null;
        String sql3 = "SELECT NOM FROM TTABLE WHERE NOM=('" + name + "')";
        try {

            String url = "jdbc:sqlite:CAFE.db";
            // create a connection to the database
            conn3 = DriverManager.getConnection(url);
            PreparedStatement pstmt = conn3.prepareStatement(sql3);
            ResultSet rs3 = pstmt.executeQuery();
            if (!rs3.next()) {
                String sql2 = "INSERT INTO TTABLE ( NOM ) VALUES(?)";
                try {

                    String url2 = "jdbc:sqlite:CAFE.db";
                    // create a connection to the database
                    conn2 = DriverManager.getConnection(url2);
                    PreparedStatement pstmt2 = conn2.prepareStatement(sql2);

                    pstmt2.setString(1, name);

                    pstmt2.executeUpdate();
                    JOptionPane.showMessageDialog(null, "تمت الاضافة");

                } catch (SQLException e) {
                    System.out.println(e.getMessage());
                } finally {
                    try {
                        if (conn2 != null) {
                            conn2.close();
                        }
                    } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                    }
                }
            }

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn2 != null) {
                    conn2.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }

    }

    void update1() {
        int qty = 0;
        int qty3 = 0;
        int qty2 = 0;
        int i2 = 0;

        javax.swing.table.DefaultTableModel modelo1 = (javax.swing.table.DefaultTableModel) table_commande.getModel();

        while (i2 < table_commande.getRowCount()) {

            qty = Integer.parseInt(modelo1.getValueAt(i2, 1).toString());
            Connection conn1 = null;

            try {
                String sql1 = "SELECT QTE FROM PRODUIT WHERE  NOM = '" + (modelo1.getValueAt(i2, 2)).toString() + "'";
                String url = "jdbc:sqlite:CAFE.db";
                // create a connection to the database
                conn1 = DriverManager.getConnection(url);

                PreparedStatement stmt1 = conn1.prepareStatement(sql1);
                //Bind values into the parameters.
                ResultSet rs1 = stmt1.executeQuery();

                qty2 = Integer.parseInt(rs1.getString(1));

                qty3 = qty2 - qty;

            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            } finally {
                try {
                    if (conn1 != null) {
                        conn1.close();
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                }
            }
           

            Connection conn = null;
            String sql = "UPDATE PRODUIT SET QTE = ?  WHERE  NOM = '" + modelo1.getValueAt(i2, 2).toString() + "' ";

            try {

                String url = "jdbc:sqlite:CAFE.db";
                // create a connection to the database
                conn = DriverManager.getConnection(url);
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, String.valueOf(qty3));

                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "تمت الاضافة");

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            } finally {
                try {
                    if (conn != null) {
                        conn.close();
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                }
            }

            i2++;
        }
    }

    void insertcaisse() {
        Connection conn4 = null;
        String sql4 = "INSERT INTO CAISSE ( DATE,DEBUT,TOTAL, GRAND_TOTAL,ID_TABLE) VALUES(?,?,?,?,?)";
        try {
            Interface in = new Interface();
            CAISSE c = new CAISSE();
            c.CAISSE();

            String url2 = "jdbc:sqlite:CAFE.db";
            // create a connection to the database
            conn4 = DriverManager.getConnection(url2);
            PreparedStatement pstmt2 = conn4.prepareStatement(sql4);
            pstmt2.setString(1, in.lbl_date.getText());
            pstmt2.setString(2, c.txt_debut.getText());
            pstmt2.setString(3, String.valueOf(subtot));
            pstmt2.setString(4, String.valueOf((Double.parseDouble(c.txt_grandtotal.getText()) + subtot)));
            pstmt2.setString(5, name);

            pstmt2.executeUpdate();
            JOptionPane.showMessageDialog(null, "تمت الاضافة");

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn4 != null) {
                    conn4.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }

    void insertvente() {
        javax.swing.table.DefaultTableModel modelo1 = (javax.swing.table.DefaultTableModel) table_commande.getModel();
        int i2 = 0;
        while (i2 < table_commande.getRowCount()) {

            Connection conn4 = null;
            String sql4 = "INSERT INTO VENTE ( ID_PRODUIT,ID_TABLE,QTE) VALUES(?,?,?)";
            try {

                String url2 = "jdbc:sqlite:CAFE.db";
                // create a connection to the database
                conn4 = DriverManager.getConnection(url2);
                PreparedStatement pstmt2 = conn4.prepareStatement(sql4);
                pstmt2.setString(1, (modelo1.getValueAt(i2, 2).toString()));
                pstmt2.setString(2, name);
                pstmt2.setString(3, (modelo1.getValueAt(i2, 1).toString()));

                pstmt2.executeUpdate();
                JOptionPane.showMessageDialog(null, "تمت الاضافة");

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            } finally {
                try {
                    if (conn4 != null) {
                        conn4.close();
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                }
            }
       i2++;  }
       
    }
}
